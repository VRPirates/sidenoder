<!-- Modal -->
<div
  class="modal fade"
  id="sideloadModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="sideloadModalLabel"
  data-backdrop="static"
  data-keyboard="false"
>
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="sideloadModalLabel">
          <i id="sideloadRefresh" class="fa fa-refresh fa-spin"></i> Sideloading
        </h5>
        <small id="sideload_transfer_state" class="text-right"></small>
      </div>
      <div class="modal-body">
        <span id="sideloadText"></span>
        <br>
        <div class="row">
          <div class="col-4">Check device:</div>
          <div>
            <span id="deviceBadge" class="badge badge-warning">pending</span>
          </div>
        </div>
        <div class="row">
          <div class="col-4">Download APK:</div>
          <div>
            <span id="downloadDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Read Packageinfo:</div>
          <div>
            <span id="aaptDoneBadge" class="badge badge-warning">pending</span>
          </div>
        </div>
        <div class="row">
          <div class="col-4">Check if installed:</div>
          <div>
            <span id="checkDoneBadge" class="badge badge-warning">pending</span>
          </div>
        </div>
        <div class="row">
          <div class="col-4">Backup Appdata:</div>
          <div>
            <span id="backupDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Uninstall APK:</div>
          <div>
            <span id="uninstallDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Install APK:</div>
          <div>
            <span id="apkDoneBadge" class="badge badge-warning">pending</span>
          </div>
        </div>
        <div class="row">
          <div class="col-4">Restore Appdata:</div>
          <div>
            <span id="restoreDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Remove OBB's:</div>
          <div>
            <span id="removeObbDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Download OBB's:</div>
          <div>
            <span id="downloadObbDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Copy OBB's:</div>
          <div>
            <span id="copyObbDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div class="row">
          <div class="col-4">Sideload finished:</div>
          <div>
            <span id="sideloadDoneBadge" class="badge badge-warning"
              >pending</span
            >
          </div>
        </div>
        <div id="sideloadErrorArea" style="display: none">
          <a
            class="btn btn-sm btn-outline-danger"
            data-toggle="collapse"
            href="#collapseError"
            aria-expanded="false"
            aria-controls="collapseError"
          >
            <i class="fa fa-angle-down"></i> Fail log
          </a>
          <div class="collapse" id="collapseError">
            <pre
              id="sideloadError"
              class="card bg-dark"
              style="white-space: pre-wrap;padding: 8pt;"
            >
            </pre>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        {# <button type="button" class="btn btn-secondary disabled" data-dismiss="modal">Close</button> #}
        <button
          type="button"
          id="sideloadDoneBtn"
          class="btn btn-primary disabled"
        >
          Please wait for the process to finish
        </button>
      </div>
    </div>
  </div>
</div>
<script>
  ipcRenderer.removeAllListeners('process_data');
  ipcRenderer.on('process_data', (event, data) => {
    console.log('process_data received', data);
    if (!data) return (id('sideload_transfer_state').innerHTML = '');

    let line = `${data.cmd}: ${formatBytes(data.bytes)}`;
    if (data.size) {
      line += ` of ${formatBytes(data.size)} (${data.percentage}%)`;
    }

    if (data.speedAvg) {
      line += ` - ${formatBytes(data.speedAvg)}/s (${formatEta(data.eta)})`;
    }

    const name = data.name.split('/').pop();
    id('sideload_transfer_state').innerHTML = `${line}<br/> ${name}`;
  });

  ipcRenderer.removeAllListeners('start_sideload');
  ipcRenderer.on('start_sideload', (event, arg) => {
    console.log('start_sideload msg came ! ');
    console.log(arg);
    const { success, path } = arg;
    if (!success) return;

    const lastslashindex = path.lastIndexOf('/');
    const file = path.substring(lastslashindex + 1);

    $id('sideloadModal').modal('show');
    id('sideloadText').innerHTML = 'pending: <br/><b>' + file + '</b>';
  });

  ipcRenderer.removeAllListeners('sideload_process');
  ipcRenderer.on('sideload_process', (event, arg) => {
    console.log('sideload_process', arg);

    if (arg.device) {
      badgeState($id('deviceBadge'), arg.device);
    }

    if (arg.aapt) {
      badgeState($id('aaptDoneBadge'), arg.aapt);
    }

    if (arg.check) {
      badgeState($id('checkDoneBadge'), arg.check);
    }

    if (arg.backup) {
      badgeState($id('backupDoneBadge'), arg.backup);
    }

    if (arg.uninstall) {
      badgeState($id('uninstallDoneBadge'), arg.uninstall);
    }

    if (arg.restore) {
      badgeState($id('restoreDoneBadge'), arg.restore);
    }

    if (arg.download) {
      badgeState($id('downloadDoneBadge'), arg.download);
    }

    if (arg.apk) {
      badgeState($id('apkDoneBadge'), arg.apk);
    }

    if (arg.remove_obb) {
      badgeState($id('removeObbDoneBadge'), arg.remove_obb);
    }

    if (arg.download_obb) {
      badgeState($id('downloadObbDoneBadge'), arg.download_obb);
    }

    if (arg.push_obb) {
      badgeState($id('copyObbDoneBadge'), arg.push_obb);
    }

    remote
      .getGlobal('win')
      .setProgressBar($('.badge-warning').length / $('.badge').length);

    if (arg.done) {
      badgeState($id('sideloadDoneBadge'), arg.done);

      $id('sideloadDoneBtn')
        .removeClass('disabled')
        .removeClass('btn-primary')
        .addClass('btn-success')
        .html('Done');
      $id('sideloadRefresh')
        .removeClass('fa-refresh')
        .removeClass('fa-spin')
        .addClass('fa-check-circle-o');

      if (!arg.error)
        remote.getGlobal('notify')(
          'Sucesfully sideloaded',
          arg.location,
          'low',
        );
    }

    if (arg.update) {
      getUpdates();
    }

    if (arg.error) {
      $id('sideloadError').text(arg.error);
      $id('sideloadErrorArea').show();
      remote.getGlobal('notify')('Sideload Failed', arg.location);
    }
  });

  function badgeState(badge, text) {
    badge.text(text);
    if (!badge.hasClass('badge-warning')) return;

    let state = '';
    if (text === 'done') state = 'success';
    else if (text === 'skip') state = 'secondary';
    else if (text === 'fail') state = 'danger';
    else if (text.includes('/')) {
      const parts = text.split('/');
      if (parts[0] == parts[1]) state = 'success';
      else return;
    } else return;

    badge.removeClass('badge-warning').addClass('badge-' + state);
  }

  $id('sideloadDoneBtn').on('click', function () {
    remote.getGlobal('win').setProgressBar(0);
    $id('sideloadModal').modal('hide');
    // $('.modal-backdrop').remove();
  });
</script>
